name: "App Build"

on:
  push:
jobs:
  test:
    name: Test

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Compile Assets
      run: npm install && npm run build
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  # build:
    name: Build
    # needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/alexjose/lara-k8s:latest
            ghcr.io/alexjose/lara-k8s:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # deploy:
    # name: Deploy
    # needs: build
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Set the Kubernetes context
    #     uses: azure/k8s-set-context@v2
    #     with:
    #       method: service-account
    #       k8s-url: https://0F8DDF7A214DD05DE9FBCDEF601462C7.gr7.ap-south-1.eks.amazonaws.com
    #       k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

    #   - uses: actions/checkout@v4

    #   - name: Deploy to the Kubernetes cluster
    #     uses: azure/k8s-deploy@v1
    #     with:
    #       namespace: default
    #       manifests: |
    #         k8s/deployment.yaml
    #         k8s/ingress.yaml
    #         k8s/service.yaml
    #       images: |
    #         ghcr.io/alexjose/lara-k8s:${{ github.sha }}
